{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(http) {\n      this.http = http;\n      this.cartItemList = [];\n      this.productList = new BehaviorSubject([]);\n    }\n\n    getProducts() {\n      return this.productList.asObservable();\n    }\n\n    setProducts(product) {\n      this.cartItemList.push(...product);\n      this.productList.next(product);\n    }\n\n    addToCart(product) {\n      if (this.cartItemList.length === 0) {\n        this.cartItemList.push(product);\n        this.productList.next(this.cartItemList);\n      } else {\n        let b = product,\n            c = 0;\n        this.cartItemList.forEach(a => {\n          if (product.id === a.id) {\n            b = a;\n            c = 1;\n          }\n        });\n\n        if (product.id === b.id && c === 1) {\n          if (b.qty < 10) {\n            b.qty += 1;\n            this.productList.next(this.cartItemList);\n          } else {\n            alert(\"you can't add more then 10 quantity\");\n          }\n        } else {\n          this.cartItemList.push(product);\n          this.productList.next(this.cartItemList);\n        }\n      }\n\n      this.getTotalPrice();\n    }\n\n    getTotalPrice() {\n      let grandTotal = 0;\n      this.cartItemList.map(a => {\n        grandTotal += +parseInt(a.price) * a.qty;\n      });\n      return grandTotal;\n    }\n\n    removeCartItem(product) {\n      this.cartItemList.map((a, index) => {\n        if (product.id === a.id) {\n          this.cartItemList.splice(index, 1);\n        }\n      });\n      this.productList.next(this.cartItemList);\n      console.log(this.cartItemList);\n    }\n\n    clearCart() {\n      this.cartItemList = [];\n      this.productList.next(this.cartItemList);\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}