{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/cart.service\";\nimport * as i2 from \"src/app/service/order.service\";\nimport * as i3 from \"@angular/common\";\nexport let PaymentComponent = /*#__PURE__*/(() => {\n  class PaymentComponent {\n    constructor(cart, orderService) {\n      this.cart = cart;\n      this.orderService = orderService;\n      this.placedorderDetails = [];\n      this.strikeCheckout = null;\n      this.paymentDetails = {};\n      this.orderDetails = [];\n      this.orderList = [];\n    }\n\n    ngOnInit() {\n      /*  this.orderDetails = this.orderList.source._value;\r\n        this.placedorderDetails = {\r\n          orderList : this.orderDetails,\r\n          totalAmount : this.amount,\r\n          userId : this.userId\r\n        } */\n      this.orderList = this.cart.getProducts();\n      this.orderDetails = this.orderList.source._value;\n      localStorage.setItem('cart', JSON.stringify(this.orderDetails));\n      this.amount = this.cart.getTotalPrice();\n      this.stripePaymentGateway();\n    }\n\n    checkout(amount) {\n      const strikeCheckout = window.StripeCheckout.configure({\n        key: 'pk_test_51K1SN9SCME3d3wpjLSsy4b8UP3xFUzS4QjFx2i4NEbERYDDpcQ7hs3O2SYxRTnqKkjcgSKzTSVeSI5ZQKm3q3qbN00ZAVrgZGm',\n        locale: 'auto',\n        token: function (stripeToken) {\n          this.paymentDetails = stripeToken;\n          this.paymentType = this.paymentDetails.card.brand;\n          this.paymentId = this.paymentDetails.card.id;\n          const user = JSON.parse(localStorage.getItem('user'));\n          this.userId = user.passportId;\n          const Details = JSON.parse(localStorage.getItem('cart')); // const addressId = JSON.parse(localStorage.getItem('addressId'));\n\n          const addressId = localStorage.getItem('addressId');\n          var today = new Date();\n          var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + \":\" + today.getMinutes();\n          this.placedorderDetails = {\n            OrderDetails: Details,\n            TotalPrice: amount,\n            UserId: this.userId,\n            PaymentId: this.paymentId,\n            OrderState: 'Order Placed',\n            OrderDate: date,\n            addressId: addressId\n          };\n          localStorage.removeItem('addressId');\n          localStorage.setItem('order', JSON.stringify(this.placedorderDetails));\n          console.log(this.placedorderDetails);\n          Swal.fire({\n            timer: 2500,\n            title: 'Thank You !',\n            text: 'Payment via ' + `${this.paymentType}` + ' successfull',\n            icon: 'success'\n          }).then(result => {\n            localStorage.removeItem('total');\n            localStorage.removeItem('cart');\n            window.location.replace(\"/account/customer/orders\");\n          });\n        }\n      });\n      strikeCheckout.open({\n        name: 'Complete Your Purchase',\n        description: 'Payment in Testing Mode',\n        currency: 'INR',\n        amount: amount * 100\n      });\n    }\n\n    stripePaymentGateway() {\n      if (!window.document.getElementById('stripe-script')) {\n        const scr = window.document.createElement(\"script\");\n        scr.id = \"stripe-script\";\n        scr.type = \"text/javascript\";\n        scr.src = \"https://checkout.stripe.com/checkout.js\";\n\n        scr.onload = () => {\n          this.strikeCheckout = window.StripeCheckout.configure({\n            key: 'pk_test_51K1SN9SCME3d3wpjLSsy4b8UP3xFUzS4QjFx2i4NEbERYDDpcQ7hs3O2SYxRTnqKkjcgSKzTSVeSI5ZQKm3q3qbN00ZAVrgZGm',\n            locale: 'auto',\n            token: function (token) {\n              console.log(token);\n            }\n          });\n        };\n\n        window.document.body.appendChild(scr);\n      }\n    }\n\n  }\n\n  PaymentComponent.ɵfac = function PaymentComponent_Factory(t) {\n    return new (t || PaymentComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.OrderService));\n  };\n\n  PaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaymentComponent,\n    selectors: [[\"app-payment\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-10\", \"m-2\", \"p-2\"], [1, \"card\"], [1, \"card-body\", \"mb-2\"], [1, \"btn-group\", \"col-md-6\", \"mb-2\"], [1, \"input-group-prepend\"], [\"id\", \"btnGroupAddon\", 1, \"input-group-text\"], [1, \"btn\", \"btn-md\", \"btn-info\", 3, \"click\"]],\n    template: function PaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h6\");\n        i0.ɵɵtext(6, \"Select Payment Option's\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7);\n        i0.ɵɵtext(10, \"Pay Through Stripes\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function PaymentComponent_Template_button_click_11_listener() {\n          return ctx.checkout(ctx.amount);\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"currency\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\"Pay \", i0.ɵɵpipeBind2(13, 1, ctx.amount, \"INR\"), \"\");\n      }\n    },\n    pipes: [i3.CurrencyPipe],\n    styles: [\"\"]\n  });\n  return PaymentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}